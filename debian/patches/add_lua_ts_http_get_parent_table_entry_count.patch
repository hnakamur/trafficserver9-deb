--- a/include/ts/ts.h
+++ b/include/ts/ts.h
@@ -2761,6 +2761,11 @@
 tsapi bool TSHttpTxnCntlGet(TSHttpTxn txnp, TSHttpCntlType ctrl);
 tsapi TSReturnCode TSHttpTxnCntlSet(TSHttpTxn txnp, TSHttpCntlType ctrl, bool data);
 
+/*
+ * Get entry count in parent.config.
+ */
+tsapi int TSHttpParentTableGetEntryCount(TSHttpTxn txnp);
+
 #ifdef __cplusplus
 }
 #endif /* __cplusplus */
--- a/plugins/lua/ts_lua_http.c
+++ b/plugins/lua/ts_lua_http.c
@@ -128,6 +128,8 @@
 static int ts_lua_http_req_transform_set_downstream_watermark_bytes(lua_State *L);
 static int ts_lua_http_req_transform_set_upstream_bytes(lua_State *L);
 
+static int ts_lua_http_get_parent_table_entry_count(lua_State *L);
+
 void
 ts_lua_inject_http_api(lua_State *L)
 {
@@ -322,6 +324,9 @@
   lua_pushcfunction(L, ts_lua_http_get_ssn_remote_addr);
   lua_setfield(L, -2, "get_ssn_remote_addr");
 
+  lua_pushcfunction(L, ts_lua_http_get_parent_table_entry_count);
+  lua_setfield(L, -2, "get_parent_table_entry_count");
+
   ts_lua_inject_server_state_variables(L);
 }
 
@@ -1195,3 +1200,15 @@
 {
   return ts_lua_http_resp_transform_set_downstream_bytes(L);
 }
+
+static int
+ts_lua_http_get_parent_table_entry_count(lua_State *L)
+{
+  ts_lua_http_ctx *http_ctx;
+
+  GET_HTTP_CONTEXT(http_ctx, L);
+
+  int count = TSHttpParentTableGetEntryCount(http_ctx->txnp);
+  lua_pushinteger(L, (lua_Integer)count);
+  return 1;
+}
--- a/src/traffic_server/InkAPI.cc
+++ b/src/traffic_server/InkAPI.cc
@@ -10430,3 +10430,15 @@
   HttpSM *sm = (HttpSM *)txnp;
   return (TSIOBufferReader)sm->get_postbuf_clone_reader();
 }
+
+/*
+ * Get entry count in parent.config.
+ */
+tsapi int
+TSHttpParentTableGetEntryCount(TSHttpTxn txnp)
+{
+  HttpSM *sm             = reinterpret_cast<HttpSM *>(txnp);
+  HttpTransact::State *s = &(sm->t_state);
+  return s->parent_params && s->parent_params->parent_table
+    ? s->parent_params->parent_table->getEntryCount() : 0;
+}
